openapi: 3.0.3
info:
  title: AI Workout Backend API
  description: |
    AI-powered workout generation backend with user management and workout tracking.
    
    ## Features
    - User registration and profile management
    - AI-powered workout generation using OpenAI
    - Equipment-based workout customization
    - Workout completion tracking and feedback
    
    ## Base URLs
    - **Local Development**: `http://localhost:3000`
    - **Production**: `https://ai-workout-backend-2024.web.app`
  version: 1.0.0
  contact:
    name: AI Workout Backend
    url: https://github.com/your-repo/ai-workout-backend

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://ai-workout-backend-2024.web.app
    description: Production server

paths:
  /health:
    get:
      summary: Health check
      description: Check if the API is running and healthy
      tags:
        - Health
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /v1/equipment:
    get:
      summary: Get all equipment
      description: Retrieve list of all available workout equipment
      tags:
        - Equipment
      responses:
        '200':
          description: List of equipment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentResponse'

  /v1/users:
    post:
      summary: Create user
      description: Create a new user with optional profile information
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/profile/{userId}:
    get:
      summary: Get user profile
      description: Retrieve user profile by user ID
      tags:
        - Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update user profile
      description: Update user profile information
      tags:
        - Profile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/workouts/generate:
    post:
      summary: Generate AI workout
      description: Generate a personalized workout plan using AI
      tags:
        - Workouts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateWorkoutRequest'
      responses:
        '201':
          description: Workout generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateWorkoutResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/workouts/{workoutId}:
    get:
      summary: Get specific workout
      description: Retrieve a specific workout plan by ID
      tags:
        - Workouts
      parameters:
        - name: workoutId
          in: path
          required: true
          schema:
            type: string
          description: Workout ID
      responses:
        '200':
          description: Workout plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkoutResponse'
        '404':
          description: Workout not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/workouts:
    get:
      summary: Get user workouts
      description: Retrieve all workouts for a specific user
      tags:
        - Workouts
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: List of user workouts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWorkoutsResponse'

  /v1/workouts/{workoutId}/complete:
    post:
      summary: Complete workout
      description: Mark a workout as completed with feedback
      tags:
        - Workouts
      parameters:
        - name: workoutId
          in: path
          required: true
          schema:
            type: string
          description: Workout ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteWorkoutRequest'
      responses:
        '201':
          description: Workout completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteWorkoutResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Workout not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    FirestoreTimestamp:
      type: object
      properties:
        _seconds:
          type: integer
        _nanoseconds:
          type: integer

    HealthResponse:
      type: object
      properties:
        ok:
          type: boolean
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        environment:
          type: string

    Equipment:
      type: object
      properties:
        slug:
          type: string
        label:
          type: string

    EquipmentResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Equipment'

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        createdAt:
          $ref: '#/components/schemas/FirestoreTimestamp'
        updatedAt:
          $ref: '#/components/schemas/FirestoreTimestamp'

    Profile:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        experience:
          type: string
          enum: [beginner, intermediate, advanced]
        goals:
          type: array
          items:
            type: string
        equipmentAvailable:
          type: array
          items:
            type: string
        age:
          type: integer
          nullable: true
        sex:
          type: string
          enum: [male, female, prefer_not_to_say]
        height_ft:
          type: integer
          nullable: true
        height_in:
          type: integer
          nullable: true
        weight_lb:
          type: number
          nullable: true
        injury_notes:
          type: string
          nullable: true
        constraints:
          type: array
          items:
            type: string
        health_ack:
          type: boolean
        data_consent:
          type: boolean
        createdAt:
          $ref: '#/components/schemas/FirestoreTimestamp'
        updatedAt:
          $ref: '#/components/schemas/FirestoreTimestamp'

    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        experience:
          type: string
          enum: [beginner, intermediate, advanced]
        goals:
          type: array
          items:
            type: string
        equipmentAvailable:
          type: array
          items:
            type: string
        age:
          type: integer
          minimum: 13
          maximum: 120
        sex:
          type: string
          enum: [male, female, prefer_not_to_say]
        height_ft:
          type: integer
          minimum: 0
          maximum: 10
        height_in:
          type: integer
          minimum: 0
          maximum: 11
        weight_lb:
          type: number
          minimum: 0
        injury_notes:
          type: string
        constraints:
          type: array
          items:
            type: string
        health_ack:
          type: boolean
        data_consent:
          type: boolean

    CreateUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        profile:
          $ref: '#/components/schemas/Profile'
          nullable: true

    ProfileResponse:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/Profile'

    UpdateProfileRequest:
      type: object
      properties:
        experience:
          type: string
          enum: [beginner, intermediate, advanced]
        goals:
          type: array
          items:
            type: string
        equipmentAvailable:
          type: array
          items:
            type: string
        age:
          type: integer
          minimum: 13
          maximum: 120
        sex:
          type: string
          enum: [male, female, prefer_not_to_say]
        height_ft:
          type: integer
          minimum: 0
          maximum: 10
        height_in:
          type: integer
          minimum: 0
          maximum: 11
        weight_lb:
          type: number
          minimum: 0
        injury_notes:
          type: string
        constraints:
          type: array
          items:
            type: string
        health_ack:
          type: boolean
        data_consent:
          type: boolean

    GenerateWorkoutRequest:
      type: object
      required:
        - userId
        - time_available_min
        - energy_level
        - workout_type
      properties:
        userId:
          type: string
        time_available_min:
          type: integer
          minimum: 10
          maximum: 120
        energy_level:
          type: integer
          minimum: 1
          maximum: 5
        workout_type:
          type: string
          enum: [full_body, upper_lower, push, pull, legs, core, conditioning, mobility, recovery]
        start_time_iso:
          type: string
          format: date-time
        equipment_override:
          type: array
          items:
            type: string
        new_injuries:
          type: string

    WorkoutSet:
      type: object
      properties:
        reps:
          type: integer
        time_sec:
          type: integer
        rest_sec:
          type: integer
        tempo:
          type: string
        intensity:
          type: string
        notes:
          type: string

    Exercise:
      type: object
      properties:
        slug:
          type: string
        display_name:
          type: string
        type:
          type: string
        equipment:
          type: array
          items:
            type: string
        primary_muscles:
          type: array
          items:
            type: string
        sets:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutSet'

    WorkoutBlock:
      type: object
      properties:
        name:
          type: string
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'

    WarmupCooldownItem:
      type: object
      properties:
        name:
          type: string
        duration_sec:
          type: integer
        cues:
          type: string

    FinisherItem:
      type: object
      properties:
        name:
          type: string
        work_sec:
          type: integer
        rest_sec:
          type: integer
        rounds:
          type: integer
        notes:
          type: string

    WorkoutPlan:
      type: object
      properties:
        meta:
          type: object
          properties:
            date_iso:
              type: string
              format: date
            session_type:
              type: string
            goal:
              type: string
            experience:
              type: string
            est_duration_min:
              type: integer
            equipment_used:
              type: array
              items:
                type: string
        warmup:
          type: array
          items:
            $ref: '#/components/schemas/WarmupCooldownItem'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutBlock'
        finisher:
          type: array
          items:
            $ref: '#/components/schemas/FinisherItem'
        cooldown:
          type: array
          items:
            $ref: '#/components/schemas/WarmupCooldownItem'
        notes:
          type: string

    GenerateWorkoutResponse:
      type: object
      properties:
        workoutId:
          type: string
        plan:
          $ref: '#/components/schemas/WorkoutPlan'

    WorkoutResponse:
      type: object
      properties:
        workoutId:
          type: string
        plan:
          $ref: '#/components/schemas/WorkoutPlan'
        meta:
          type: object
          properties:
            createdAt:
              $ref: '#/components/schemas/FirestoreTimestamp'
            model:
              type: string

    UserWorkoutsResponse:
      type: object
      properties:
        workouts:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutResponse'

    CompleteWorkoutRequest:
      type: object
      properties:
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        feedback:
          type: object
          additionalProperties: true

    WorkoutSession:
      type: object
      properties:
        id:
          type: string
        planId:
          type: string
        userId:
          type: string
        startedAt:
          $ref: '#/components/schemas/FirestoreTimestamp'
          nullable: true
        completedAt:
          $ref: '#/components/schemas/FirestoreTimestamp'
          nullable: true
        feedback:
          type: object
          additionalProperties: true
        createdAt:
          $ref: '#/components/schemas/FirestoreTimestamp'
        updatedAt:
          $ref: '#/components/schemas/FirestoreTimestamp'

    CompleteWorkoutResponse:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/WorkoutSession'

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        stack:
          type: string

tags:
  - name: Health
    description: API health and status
  - name: Equipment
    description: Workout equipment management
  - name: Users
    description: User account management
  - name: Profile
    description: User profile management
  - name: Workouts
    description: AI workout generation and management
